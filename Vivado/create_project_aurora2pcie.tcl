#*****************************************************************************************
# Vivado (TM) v2021.2 (64-bit)
#
# create_project_aurora2pcie.tcl: Tcl script for re-creating project 'aurora2pcie'
#
# Generated by Vivado on Sat Apr 02 21:40:05 -0400 2022
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_project_aurora2pcie.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "./my_rtl/axis_distibutor.vhd"
#    "./my_rtl/axis_sig_ext.vhd"
#    "./my_rtl/frame_alignment.vhd"
#    "./my_rtl/ins_tlast.vhd"
#    "./my_rtl/aurora_8b10b_reset.vhd"
#    "./my_rtl/gt_common_wrapper.vhd"
#    "./my_rtl/reduce_fps.vhd"
#    "./my_constrs/TE0714_RX.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/my_rtl/axis_distibutor.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/axis_sig_ext.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/frame_alignment.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/ins_tlast.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/aurora_8b10b_reset.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/gt_common_wrapper.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/reduce_fps.vhd"]"\
 "[file normalize "$origin_dir/my_constrs/TE0714_RX.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "aurora2pcie"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_project_aurora2pcie.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/aurora2pcie"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a50tcsg325-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "platform.board_id" -value "te0714_50_2ic6" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "4" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "5" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "5" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "4" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "5" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "5" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "55" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/my_rtl/axis_distibutor.vhd"] \
 [file normalize "${origin_dir}/my_rtl/axis_sig_ext.vhd"] \
 [file normalize "${origin_dir}/my_rtl/frame_alignment.vhd"] \
 [file normalize "${origin_dir}/my_rtl/ins_tlast.vhd"] \
 [file normalize "${origin_dir}/my_rtl/aurora_8b10b_reset.vhd"] \
 [file normalize "${origin_dir}/my_rtl/gt_common_wrapper.vhd"] \
 [file normalize "${origin_dir}/my_rtl/reduce_fps.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/my_rtl/axis_distibutor.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/axis_sig_ext.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/frame_alignment.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/ins_tlast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/aurora_8b10b_reset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/gt_common_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/reduce_fps.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/my_constrs/TE0714_RX.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/my_constrs/TE0714_RX.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/my_constrs/TE0714_RX.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/my_constrs/TE0714_RX.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files axis_distibutor.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/axis_distibutor.vhd
}
if { [get_files axis_sig_ext.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/axis_sig_ext.vhd
}
if { [get_files axis_sig_ext.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/axis_sig_ext.vhd
}
if { [get_files frame_alignment.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/frame_alignment.vhd
}
if { [get_files frame_alignment.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/frame_alignment.vhd
}
if { [get_files ins_tlast.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/ins_tlast.vhd
}
if { [get_files ins_tlast.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/ins_tlast.vhd
}
if { [get_files aurora_8b10b_reset.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/aurora_8b10b_reset.vhd
}
if { [get_files gt_common_wrapper.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/gt_common_wrapper.vhd
}
if { [get_files reduce_fps.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/reduce_fps.vhd
}
if { [get_files reduce_fps.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/reduce_fps.vhd
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# aurora_8b10b_reset, axis_distibutor, axis_sig_ext, axis_sig_ext, frame_alignment, frame_alignment, gt_common_wrapper, ins_tlast, ins_tlast, reduce_fps, reduce_fps



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:aurora_8b10b:11.1\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:vio:3.0\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:xpm_cdc_gen:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  aurora_8b10b_reset\
  axis_distibutor\
  axis_sig_ext\
  axis_sig_ext\
  frame_alignment\
  frame_alignment\
  gt_common_wrapper\
  ins_tlast\
  ins_tlast\
  reduce_fps\
  reduce_fps\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set MGT_REFCLK [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 MGT_REFCLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
   ] $MGT_REFCLK

  set MGT_SERIAL_RX [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_aurora:GT_Serial_Transceiver_Pins_RX_rtl:1.0 MGT_SERIAL_RX ]

  set PCIe_REFCLK [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 PCIe_REFCLK ]

  set PCIe_SERIAL [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 PCIe_SERIAL ]


  # Create ports
  set EN_GTPWR [ create_bd_port -dir O -from 0 -to 0 EN_GTPWR ]
  set GPIO_O [ create_bd_port -dir O GPIO_O ]
  set KEY0 [ create_bd_port -dir I -type rst KEY0 ]
  set KEY1 [ create_bd_port -dir I KEY1 ]
  set LED_GREEN [ create_bd_port -dir O -from 0 -to 0 LED_GREEN ]
  set LED_MOD [ create_bd_port -dir O -from 0 -to 0 LED_MOD ]
  set LED_YELLOW [ create_bd_port -dir O -from 0 -to 0 LED_YELLOW ]
  set PCIe_CLK_nREQ [ create_bd_port -dir O -from 0 -to 0 -type rst PCIe_CLK_nREQ ]
  set PCIe_nRST [ create_bd_port -dir I -type rst PCIe_nRST ]
  set sys_clock [ create_bd_port -dir I -type clk -freq_hz 25000000 sys_clock ]
  set_property -dict [ list \
   CONFIG.PHASE {0.0} \
 ] $sys_clock

  # Create instance: aurora_8b10b_0, and set properties
  set aurora_8b10b_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:aurora_8b10b:11.1 aurora_8b10b_0 ]
  set_property -dict [ list \
   CONFIG.Backchannel_mode {Timer} \
   CONFIG.C_DRP_IF {true} \
   CONFIG.C_LANE_WIDTH {2} \
   CONFIG.C_LINE_RATE {3.125} \
   CONFIG.Dataflow_Config {RX-only_Simplex} \
   CONFIG.Interface_Mode {Framing} \
 ] $aurora_8b10b_0

  # Create instance: aurora_8b10b_reset_0, and set properties
  set block_name aurora_8b10b_reset
  set block_cell_name aurora_8b10b_reset_0
  if { [catch {set aurora_8b10b_reset_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $aurora_8b10b_reset_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_data_fifo_00, and set properties
  set axis_data_fifo_00 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_00 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {8192} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_AEMPTY {0} \
   CONFIG.HAS_AFULL {1} \
   CONFIG.HAS_RD_DATA_COUNT {0} \
   CONFIG.HAS_WR_DATA_COUNT {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
 ] $axis_data_fifo_00

  # Create instance: axis_data_fifo_01, and set properties
  set axis_data_fifo_01 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_01 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {8192} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_AEMPTY {0} \
   CONFIG.HAS_AFULL {0} \
   CONFIG.HAS_RD_DATA_COUNT {0} \
   CONFIG.HAS_WR_DATA_COUNT {0} \
   CONFIG.IS_ACLK_ASYNC {0} \
 ] $axis_data_fifo_01

  # Create instance: axis_data_fifo_10, and set properties
  set axis_data_fifo_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_10 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {8192} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_AEMPTY {0} \
   CONFIG.HAS_AFULL {1} \
   CONFIG.HAS_RD_DATA_COUNT {0} \
   CONFIG.HAS_WR_DATA_COUNT {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
 ] $axis_data_fifo_10

  # Create instance: axis_data_fifo_11, and set properties
  set axis_data_fifo_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_11 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {8192} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_AEMPTY {0} \
   CONFIG.HAS_AFULL {0} \
   CONFIG.HAS_RD_DATA_COUNT {0} \
   CONFIG.HAS_WR_DATA_COUNT {0} \
   CONFIG.IS_ACLK_ASYNC {0} \
 ] $axis_data_fifo_11

  # Create instance: axis_distibutor_0, and set properties
  set block_name axis_distibutor
  set block_cell_name axis_distibutor_0
  if { [catch {set axis_distibutor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_distibutor_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {1} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {1} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
 ] $axis_dwidth_converter_1

  # Create instance: axis_sig_ext_0, and set properties
  set block_name axis_sig_ext
  set block_cell_name axis_sig_ext_0
  if { [catch {set axis_sig_ext_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_sig_ext_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_sig_ext_1, and set properties
  set block_name axis_sig_ext
  set block_cell_name axis_sig_ext_1
  if { [catch {set axis_sig_ext_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_sig_ext_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {400.0} \
   CONFIG.CLKOUT1_JITTER {226.965} \
   CONFIG.CLKOUT1_PHASE_ERROR {237.727} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {sys_clock} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {40.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {40.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.USE_BOARD_FLOW {true} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: frame_alignment_0, and set properties
  set block_name frame_alignment
  set block_cell_name frame_alignment_0
  if { [catch {set frame_alignment_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $frame_alignment_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: frame_alignment_1, and set properties
  set block_name frame_alignment
  set block_cell_name frame_alignment_1
  if { [catch {set frame_alignment_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $frame_alignment_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: gt_common_wrapper_0, and set properties
  set block_name gt_common_wrapper
  set block_cell_name gt_common_wrapper_0
  if { [catch {set gt_common_wrapper_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $gt_common_wrapper_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ins_tlast_0, and set properties
  set block_name ins_tlast
  set block_cell_name ins_tlast_0
  if { [catch {set ins_tlast_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ins_tlast_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ins_tlast_1, and set properties
  set block_name ins_tlast
  set block_cell_name ins_tlast_1
  if { [catch {set ins_tlast_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ins_tlast_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]
  set_property -dict [ list \
   CONFIG.C_AUX_RESET_HIGH {0} \
 ] $proc_sys_reset_1

  # Create instance: reduce_fps_0, and set properties
  set block_name reduce_fps
  set block_cell_name reduce_fps_0
  if { [catch {set reduce_fps_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reduce_fps_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: reduce_fps_1, and set properties
  set block_name reduce_fps
  set block_cell_name reduce_fps_1
  if { [catch {set reduce_fps_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reduce_fps_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $util_ds_buf_0

  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_1 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $util_ds_buf_1

  # Create instance: util_ds_buf_2, and set properties
  set util_ds_buf_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_2 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {BUFG} \
 ] $util_ds_buf_2

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {and} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_andgate.png} \
 ] $util_vector_logic_1

  # Create instance: util_vector_logic_2, and set properties
  set util_vector_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_2 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_2

  # Create instance: util_vector_logic_3, and set properties
  set util_vector_logic_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_3 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_3

  # Create instance: util_vector_logic_4, and set properties
  set util_vector_logic_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_4 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_4

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_EN_PROBE_IN_ACTIVITY {0} \
   CONFIG.C_NUM_PROBE_IN {0} \
   CONFIG.C_NUM_PROBE_OUT {1} \
   CONFIG.C_PROBE_OUT0_INIT_VAL {0x15} \
   CONFIG.C_PROBE_OUT0_WIDTH {6} \
   CONFIG.C_PROBE_OUT1_INIT_VAL {0x} \
   CONFIG.C_PROBE_OUT1_WIDTH {6} \
 ] $vio_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9021} \
   CONFIG.PF2_DEVICE_ID_mqdma {9221} \
   CONFIG.PF3_DEVICE_ID_mqdma {9321} \
   CONFIG.Shared_Logic_Gtc_7xG2 {true} \
   CONFIG.axisten_freq {125} \
   CONFIG.mode_selection {Advanced} \
   CONFIG.pf0_device_id {7021} \
   CONFIG.pf0_interrupt_pin {INTA} \
   CONFIG.pf0_link_status_slot_clock_config {true} \
   CONFIG.pf0_msi_enabled {false} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1:0} \
   CONFIG.pf0_msix_cap_pba_offset {00008FE0} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1:0} \
   CONFIG.pf0_msix_cap_table_offset {00008000} \
   CONFIG.pf0_msix_cap_table_size {01F} \
   CONFIG.pf0_msix_enabled {true} \
   CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axi_intf_mm {AXI_Stream} \
   CONFIG.xdma_num_usr_irq {16} \
   CONFIG.xdma_pcie_64bit_en {true} \
   CONFIG.xdma_pcie_prefetchable {true} \
   CONFIG.xdma_sts_ports {false} \
   CONFIG.xdma_wnum_chnl {2} \
   CONFIG.xlnx_ref_board {None} \
 ] $xdma_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xpm_cdc_gen_0, and set properties
  set xpm_cdc_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xpm_cdc_gen:1.0 xpm_cdc_gen_0 ]
  set_property -dict [ list \
   CONFIG.CDC_TYPE {xpm_cdc_single} \
   CONFIG.WIDTH {1} \
 ] $xpm_cdc_gen_0

  # Create instance: xpm_cdc_gen_1, and set properties
  set xpm_cdc_gen_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xpm_cdc_gen:1.0 xpm_cdc_gen_1 ]
  set_property -dict [ list \
   CONFIG.CDC_TYPE {xpm_cdc_single} \
   CONFIG.WIDTH {1} \
 ] $xpm_cdc_gen_1

  # Create instance: xpm_cdc_gen_2, and set properties
  set xpm_cdc_gen_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xpm_cdc_gen:1.0 xpm_cdc_gen_2 ]
  set_property -dict [ list \
   CONFIG.CDC_TYPE {xpm_cdc_async_rst} \
 ] $xpm_cdc_gen_2

  # Create instance: xpm_cdc_gen_3, and set properties
  set xpm_cdc_gen_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xpm_cdc_gen:1.0 xpm_cdc_gen_3 ]
  set_property -dict [ list \
   CONFIG.CDC_TYPE {xpm_cdc_async_rst} \
 ] $xpm_cdc_gen_3

  # Create interface connections
  connect_bd_intf_net -intf_net GT_SERIALM_RX_1 [get_bd_intf_ports MGT_SERIAL_RX] [get_bd_intf_pins aurora_8b10b_0/GT_SERIAL_RX]
  connect_bd_intf_net -intf_net MGT_REFCLK_1 [get_bd_intf_ports MGT_REFCLK] [get_bd_intf_pins util_ds_buf_1/CLK_IN_D]
  connect_bd_intf_net -intf_net PCIe_REFCLK_1 [get_bd_intf_ports PCIe_REFCLK] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net aurora_8b10b_0_USER_DATA_M_AXI_RX [get_bd_intf_pins aurora_8b10b_0/USER_DATA_M_AXI_RX] [get_bd_intf_pins axis_distibutor_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_01_M_AXIS [get_bd_intf_pins axis_data_fifo_01/M_AXIS] [get_bd_intf_pins axis_sig_ext_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins axis_data_fifo_00/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_11_M_AXIS [get_bd_intf_pins axis_data_fifo_11/M_AXIS] [get_bd_intf_pins axis_sig_ext_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins axis_data_fifo_10/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_distibutor_0_M00_AXIS [get_bd_intf_pins axis_distibutor_0/M00_AXIS] [get_bd_intf_pins ins_tlast_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_distibutor_0_M01_AXIS [get_bd_intf_pins axis_distibutor_0/M01_AXIS] [get_bd_intf_pins ins_tlast_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_data_fifo_01/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins axis_data_fifo_11/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_sig_ext_1_M_AXIS [get_bd_intf_pins axis_sig_ext_1/M_AXIS] [get_bd_intf_pins xdma_0/S_AXIS_C2H_1]
  connect_bd_intf_net -intf_net frame_alignment_0_M_AXIS [get_bd_intf_pins axis_data_fifo_00/S_AXIS] [get_bd_intf_pins frame_alignment_0/M_AXIS]
  connect_bd_intf_net -intf_net frame_alignment_1_M_AXIS [get_bd_intf_pins axis_data_fifo_10/S_AXIS] [get_bd_intf_pins frame_alignment_1/M_AXIS]
  connect_bd_intf_net -intf_net ins_tlast_0_M_AXIS [get_bd_intf_pins axis_sig_ext_0/M_AXIS] [get_bd_intf_pins xdma_0/S_AXIS_C2H_0]
  connect_bd_intf_net -intf_net ins_tlast_0_M_AXIS1 [get_bd_intf_pins ins_tlast_0/M_AXIS] [get_bd_intf_pins reduce_fps_0/S_AXIS]
  connect_bd_intf_net -intf_net ins_tlast_1_M_AXIS [get_bd_intf_pins ins_tlast_1/M_AXIS] [get_bd_intf_pins reduce_fps_1/S_AXIS]
  connect_bd_intf_net -intf_net reduce_fps_0_M_AXIS [get_bd_intf_pins frame_alignment_0/S_AXIS] [get_bd_intf_pins reduce_fps_0/M_AXIS]
  connect_bd_intf_net -intf_net reduce_fps_1_M_AXIS [get_bd_intf_pins frame_alignment_1/S_AXIS] [get_bd_intf_pins reduce_fps_1/M_AXIS]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports PCIe_SERIAL] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net KEY0_1 [get_bd_ports KEY0] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net KEY1_1 [get_bd_ports KEY1] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net Net1 [get_bd_pins axis_data_fifo_00/m_axis_aclk] [get_bd_pins axis_data_fifo_01/s_axis_aclk] [get_bd_pins axis_data_fifo_10/m_axis_aclk] [get_bd_pins axis_data_fifo_11/s_axis_aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_sig_ext_0/axis_aclk] [get_bd_pins axis_sig_ext_1/axis_aclk] [get_bd_pins xdma_0/axi_aclk] [get_bd_pins xpm_cdc_gen_0/src_clk] [get_bd_pins xpm_cdc_gen_1/src_clk] [get_bd_pins xpm_cdc_gen_2/dest_clk] [get_bd_pins xpm_cdc_gen_3/dest_clk]
  connect_bd_net -net PCIe_nRST_1 [get_bd_ports PCIe_nRST] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net aurora_8b10b_0_gt_common_reset_out [get_bd_pins aurora_8b10b_0/gt_common_reset_out] [get_bd_pins gt_common_wrapper_0/gt0_pll1reset_in]
  connect_bd_net -net aurora_8b10b_0_rx_channel_up [get_bd_pins aurora_8b10b_0/rx_channel_up] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net aurora_8b10b_0_rx_lane_up [get_bd_pins aurora_8b10b_0/rx_lane_up] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net aurora_8b10b_0_sys_reset_out [get_bd_pins aurora_8b10b_0/sys_reset_out] [get_bd_pins util_vector_logic_3/Op1]
  connect_bd_net -net aurora_8b10b_0_tx_out_clk [get_bd_pins aurora_8b10b_0/tx_out_clk] [get_bd_pins util_ds_buf_2/BUFG_I]
  connect_bd_net -net aurora_8b10b_clock_m_0_USER_CLK [get_bd_pins aurora_8b10b_0/sync_clk] [get_bd_pins aurora_8b10b_0/user_clk] [get_bd_pins axis_data_fifo_00/s_axis_aclk] [get_bd_pins axis_data_fifo_10/s_axis_aclk] [get_bd_pins axis_distibutor_0/axis_aclk] [get_bd_pins frame_alignment_0/axis_aclk] [get_bd_pins frame_alignment_1/axis_aclk] [get_bd_pins ins_tlast_0/axis_aclk] [get_bd_pins ins_tlast_1/axis_aclk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins reduce_fps_0/axis_aclk] [get_bd_pins reduce_fps_1/axis_aclk] [get_bd_pins util_ds_buf_2/BUFG_O] [get_bd_pins vio_0/clk] [get_bd_pins xpm_cdc_gen_0/dest_clk] [get_bd_pins xpm_cdc_gen_1/dest_clk]
  connect_bd_net -net aurora_8b10b_reset_0_gt_reset [get_bd_pins aurora_8b10b_0/gt_reset] [get_bd_pins aurora_8b10b_reset_0/gt_reset]
  connect_bd_net -net aurora_8b10b_reset_0_system_reset [get_bd_pins aurora_8b10b_0/rx_system_reset] [get_bd_pins aurora_8b10b_reset_0/system_reset]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_00/almost_full] [get_bd_pins util_vector_logic_4/Op1]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_10/almost_full] [get_bd_pins util_vector_logic_4/Op2]
  connect_bd_net -net axis_sig_ext_0_m_axis_tready_ext [get_bd_pins axis_sig_ext_0/m_axis_tready_ext] [get_bd_pins xpm_cdc_gen_0/src_in]
  connect_bd_net -net axis_sig_ext_1_m_axis_tready_ext [get_bd_pins axis_sig_ext_1/m_axis_tready_ext] [get_bd_pins xpm_cdc_gen_1/src_in]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins aurora_8b10b_0/drpclk_in] [get_bd_pins aurora_8b10b_0/init_clk_in] [get_bd_pins aurora_8b10b_reset_0/clock] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins gt_common_wrapper_0/gt0_pll0lockdetclk_in] [get_bd_pins gt_common_wrapper_0/gt0_pll1lockdetclk_in] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins clk_wiz_0/locked] [get_bd_pins proc_sys_reset_0/dcm_locked] [get_bd_pins proc_sys_reset_1/dcm_locked]
  connect_bd_net -net frame_alignment_0_axis_aresetn_out [get_bd_pins axis_data_fifo_00/s_axis_aresetn] [get_bd_pins frame_alignment_0/axis_aresetn_out] [get_bd_pins xpm_cdc_gen_2/src_arst]
  connect_bd_net -net frame_alignment_1_axis_aresetn_out [get_bd_pins axis_data_fifo_10/s_axis_aresetn] [get_bd_pins frame_alignment_1/axis_aresetn_out] [get_bd_pins xpm_cdc_gen_3/src_arst]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll0lock_out [get_bd_pins gt_common_wrapper_0/gt0_pll0lock_out] [get_bd_pins xdma_0/qpll_qplllock]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll0outclk_i [get_bd_pins gt_common_wrapper_0/gt0_pll0outclk_i] [get_bd_pins xdma_0/qpll_qplloutclk]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll0outrefclk_i [get_bd_pins gt_common_wrapper_0/gt0_pll0outrefclk_i] [get_bd_pins xdma_0/qpll_qplloutrefclk]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll1lock_out [get_bd_pins aurora_8b10b_0/quad1_common_lock_in] [get_bd_pins gt_common_wrapper_0/gt0_pll1lock_out]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll1outclk_i [get_bd_pins aurora_8b10b_0/gt0_pll1outclk_in] [get_bd_pins gt_common_wrapper_0/gt0_pll1outclk_i]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll1outrefclk_i [get_bd_pins aurora_8b10b_0/gt0_pll1outrefclk_in] [get_bd_pins gt_common_wrapper_0/gt0_pll1outrefclk_i]
  connect_bd_net -net gt_common_wrapper_0_gt0_pll1refclklost_out [get_bd_pins aurora_8b10b_0/gt0_pll0refclklost_in] [get_bd_pins gt_common_wrapper_0/gt0_pll1refclklost_out]
  connect_bd_net -net proc_sys_reset_0_bus_struct_reset [get_bd_ports PCIe_CLK_nREQ] [get_bd_pins proc_sys_reset_0/bus_struct_reset]
  connect_bd_net -net proc_sys_reset_0_peripheral_reset [get_bd_pins aurora_8b10b_reset_0/peri_reset] [get_bd_pins proc_sys_reset_0/peripheral_reset]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_pins frame_alignment_0/peripheral_aresetn] [get_bd_pins frame_alignment_1/peripheral_aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net sys_clock_1 [get_bd_ports sys_clock] [get_bd_pins clk_wiz_0/clk_in1]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins gt_common_wrapper_0/gt0_gtrefclk0_in] [get_bd_pins util_ds_buf_0/IBUF_OUT] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_1_IBUF_OUT [get_bd_pins aurora_8b10b_0/gt_refclk1] [get_bd_pins gt_common_wrapper_0/gt0_gtrefclk1_in] [get_bd_pins util_ds_buf_1/IBUF_OUT]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_ports LED_YELLOW] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net util_vector_logic_2_Res [get_bd_ports LED_GREEN] [get_bd_pins util_vector_logic_2/Res]
  connect_bd_net -net util_vector_logic_3_Res [get_bd_pins frame_alignment_0/axis_aresetn] [get_bd_pins frame_alignment_1/axis_aresetn] [get_bd_pins ins_tlast_0/axis_aresetn] [get_bd_pins ins_tlast_1/axis_aresetn] [get_bd_pins reduce_fps_0/axis_aresetn] [get_bd_pins reduce_fps_1/axis_aresetn] [get_bd_pins util_vector_logic_3/Res]
  connect_bd_net -net util_vector_logic_4_Res [get_bd_ports LED_MOD] [get_bd_pins util_vector_logic_4/Res]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins reduce_fps_0/reduce_ratio] [get_bd_pins reduce_fps_1/reduce_ratio] [get_bd_pins vio_0/probe_out0]
  connect_bd_net -net xdma_0_qpll_qpllreset [get_bd_pins gt_common_wrapper_0/gt0_pll0reset_in] [get_bd_pins xdma_0/qpll_qpllreset]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_pins util_vector_logic_2/Op1] [get_bd_pins xdma_0/user_lnk_up]
  connect_bd_net -net xlconstant_3_dout [get_bd_ports EN_GTPWR] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xpm_cdc_gen_0_dest_out [get_bd_pins frame_alignment_0/rcv_ready] [get_bd_pins xpm_cdc_gen_0/dest_out]
  connect_bd_net -net xpm_cdc_gen_1_dest_out [get_bd_pins frame_alignment_1/rcv_ready] [get_bd_pins xpm_cdc_gen_1/dest_out]
  connect_bd_net -net xpm_cdc_gen_2_dest_arst [get_bd_pins axis_data_fifo_01/s_axis_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins xpm_cdc_gen_2/dest_arst]
  connect_bd_net -net xpm_cdc_gen_3_dest_arst [get_bd_pins axis_data_fifo_11/s_axis_aresetn] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins xpm_cdc_gen_3/dest_arst]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.620979",
   "Default View_TopLeft":"899,377",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port MGT_REFCLK -pg 1 -lvl 0 -x 0 -y 850 -defaultsOSRD
preplace port MGT_SERIAL_RX -pg 1 -lvl 0 -x 0 -y 590 -defaultsOSRD
preplace port PCIe_REFCLK -pg 1 -lvl 0 -x 0 -y 730 -defaultsOSRD
preplace port PCIe_SERIAL -pg 1 -lvl 13 -x 4270 -y 620 -defaultsOSRD
preplace port port-id_KEY0 -pg 1 -lvl 0 -x 0 -y 1230 -defaultsOSRD
preplace port port-id_KEY1 -pg 1 -lvl 0 -x 0 -y 1120 -defaultsOSRD
preplace port port-id_PCIe_nRST -pg 1 -lvl 0 -x 0 -y 350 -defaultsOSRD
preplace port port-id_sys_clock -pg 1 -lvl 0 -x 0 -y 1300 -defaultsOSRD
preplace port port-id_GPIO_O -pg 1 -lvl 13 -x 4270 -y 20 -defaultsOSRD
preplace portBus EN_GTPWR -pg 1 -lvl 13 -x 4270 -y 1390 -defaultsOSRD
preplace portBus LED_GREEN -pg 1 -lvl 13 -x 4270 -y 480 -defaultsOSRD
preplace portBus LED_MOD -pg 1 -lvl 13 -x 4270 -y 370 -defaultsOSRD
preplace portBus LED_YELLOW -pg 1 -lvl 13 -x 4270 -y 980 -defaultsOSRD
preplace portBus PCIe_CLK_nREQ -pg 1 -lvl 13 -x 4270 -y 1230 -defaultsOSRD
preplace inst aurora_8b10b_0 -pg 1 -lvl 3 -x 1020 -y 700 -defaultsOSRD
preplace inst axis_data_fifo_00 -pg 1 -lvl 8 -x 2840 -y 480 -defaultsOSRD
preplace inst axis_data_fifo_01 -pg 1 -lvl 10 -x 3360 -y 510 -defaultsOSRD
preplace inst axis_data_fifo_10 -pg 1 -lvl 8 -x 2840 -y 320 -defaultsOSRD
preplace inst axis_data_fifo_11 -pg 1 -lvl 10 -x 3360 -y 700 -defaultsOSRD
preplace inst axis_distibutor_0 -pg 1 -lvl 4 -x 1400 -y 550 -defaultsOSRD
preplace inst axis_dwidth_converter_0 -pg 1 -lvl 9 -x 3120 -y 490 -defaultsOSRD
preplace inst axis_dwidth_converter_1 -pg 1 -lvl 9 -x 3120 -y 680 -defaultsOSRD
preplace inst axis_sig_ext_0 -pg 1 -lvl 11 -x 3660 -y 520 -defaultsOSRD
preplace inst axis_sig_ext_1 -pg 1 -lvl 11 -x 3660 -y 640 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 160 -y 1300 -defaultsOSRD
preplace inst frame_alignment_0 -pg 1 -lvl 7 -x 2520 -y 460 -defaultsOSRD
preplace inst frame_alignment_1 -pg 1 -lvl 7 -x 2520 -y 260 -defaultsOSRD
preplace inst ins_tlast_0 -pg 1 -lvl 5 -x 1760 -y 410 -defaultsOSRD
preplace inst ins_tlast_1 -pg 1 -lvl 5 -x 1760 -y 580 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 12 -x 4060 -y 1250 -defaultsOSRD
preplace inst proc_sys_reset_1 -pg 1 -lvl 5 -x 1760 -y 780 -defaultsOSRD
preplace inst util_ds_buf_0 -pg 1 -lvl 1 -x 160 -y 730 -defaultsOSRD
preplace inst util_ds_buf_1 -pg 1 -lvl 1 -x 160 -y 850 -defaultsOSRD
preplace inst util_ds_buf_2 -pg 1 -lvl 2 -x 540 -y 1060 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 12 -x 4060 -y 980 -defaultsOSRD
preplace inst util_vector_logic_1 -pg 1 -lvl 11 -x 3660 -y 830 -defaultsOSRD
preplace inst util_vector_logic_2 -pg 1 -lvl 12 -x 4060 -y 480 -defaultsOSRD
preplace inst util_vector_logic_3 -pg 1 -lvl 3 -x 1020 -y 410 -defaultsOSRD
preplace inst util_vector_logic_4 -pg 1 -lvl 12 -x 4060 -y 370 -defaultsOSRD
preplace inst xdma_0 -pg 1 -lvl 12 -x 4060 -y 730 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 12 -x 4060 -y 1390 -defaultsOSRD
preplace inst xpm_cdc_gen_0 -pg 1 -lvl 5 -x 1760 -y 240 -defaultsOSRD
preplace inst xpm_cdc_gen_1 -pg 1 -lvl 5 -x 1760 -y 80 -defaultsOSRD
preplace inst xpm_cdc_gen_2 -pg 1 -lvl 7 -x 2520 -y 650 -defaultsOSRD
preplace inst xpm_cdc_gen_3 -pg 1 -lvl 7 -x 2520 -y 810 -defaultsOSRD
preplace inst aurora_8b10b_reset_0 -pg 1 -lvl 2 -x 540 -y 660 -defaultsOSRD
preplace inst gt_common_wrapper_0 -pg 1 -lvl 2 -x 540 -y 870 -defaultsOSRD
preplace inst vio_0 -pg 1 -lvl 4 -x 1400 -y 690 -defaultsOSRD
preplace inst reduce_fps_0 -pg 1 -lvl 6 -x 2110 -y 420 -defaultsOSRD
preplace inst reduce_fps_1 -pg 1 -lvl 6 -x 2110 -y 610 -defaultsOSRD
preplace netloc KEY0_1 1 0 12 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ
preplace netloc KEY1_1 1 0 5 NJ 1120 NJ 1120 840J 940 1240J 760 NJ
preplace netloc Net1 1 4 9 1580 320 NJ 320 2260 560 2710 580 3020 410 3230 430 3510 450 3840J 540 4240
preplace netloc PCIe_nRST_1 1 0 12 NJ 350 NJ 350 NJ 350 NJ 350 1530J 330 NJ 330 2250J 140 NJ 140 NJ 140 NJ 140 NJ 140 3860J
preplace netloc aurora_8b10b_0_gt_common_reset_out 1 1 3 320 1000 NJ 1000 1210
preplace netloc aurora_8b10b_0_rx_channel_up 1 3 8 1240 620 1540J 880 NJ 880 NJ 880 2690J 820 NJ 820 NJ 820 NJ
preplace netloc aurora_8b10b_0_rx_lane_up 1 3 8 1250 630 1530J 890 NJ 890 NJ 890 2700J 840 NJ 840 NJ 840 NJ
preplace netloc aurora_8b10b_0_sys_reset_out 1 2 2 770 480 1220
preplace netloc aurora_8b10b_0_tx_out_clk 1 1 3 320 1130 NJ 1130 1200
preplace netloc aurora_8b10b_clock_m_0_USER_CLK 1 2 6 770 490 1260 480 1560 500 1960 520 2290 360 2700
preplace netloc aurora_8b10b_reset_0_gt_reset 1 2 1 760 630n
preplace netloc aurora_8b10b_reset_0_system_reset 1 2 1 750 610n
preplace netloc axis_data_fifo_0_almost_full 1 8 4 2970 360 NJ 360 NJ 360 NJ
preplace netloc axis_data_fifo_1_almost_full 1 8 4 2970 350 NJ 350 NJ 350 3870J
preplace netloc axis_sig_ext_0_m_axis_tready_ext 1 4 8 1590 660 1940J 700 2330J 570 NJ 570 NJ 570 3240J 600 3480J 710 3820
preplace netloc axis_sig_ext_1_m_axis_tready_ext 1 4 8 1570 680 1930J 720 NJ 720 NJ 720 3000J 590 NJ 590 3490J 720 3810
preplace netloc clk_wiz_0_clk_out1 1 1 11 300 580 800 1040 NJ 1040 NJ 1040 NJ 1040 NJ 1040 NJ 1040 NJ 1040 NJ 1040 NJ 1040 3850J
preplace netloc clk_wiz_0_locked 1 1 11 NJ 1310 NJ 1310 NJ 1310 1570 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ
preplace netloc frame_alignment_0_axis_aresetn_out 1 6 2 2350 580 2690
preplace netloc frame_alignment_1_axis_aresetn_out 1 6 2 2340 160 2710
preplace netloc gt_common_wrapper_0_gt0_pll0lock_out 1 2 10 790J 910 NJ 910 NJ 910 1970J 740 NJ 740 NJ 740 2990J 780 NJ 780 3500J 760 3840
preplace netloc gt_common_wrapper_0_gt0_pll0outclk_i 1 2 10 750J 920 NJ 920 NJ 920 NJ 920 NJ 920 NJ 920 NJ 920 NJ 920 NJ 920 3840
preplace netloc gt_common_wrapper_0_gt0_pll0outrefclk_i 1 2 10 740J 930 NJ 930 NJ 930 NJ 930 NJ 930 NJ 930 NJ 930 NJ 930 NJ 930 3870
preplace netloc gt_common_wrapper_0_gt0_pll1lock_out 1 2 1 820 770n
preplace netloc gt_common_wrapper_0_gt0_pll1outclk_i 1 2 1 780 690n
preplace netloc gt_common_wrapper_0_gt0_pll1outrefclk_i 1 2 1 830 730n
preplace netloc gt_common_wrapper_0_gt0_pll1refclklost_out 1 2 1 810 750n
preplace netloc proc_sys_reset_0_bus_struct_reset 1 12 1 NJ 1230
preplace netloc proc_sys_reset_0_peripheral_reset 1 1 12 320 730 760J 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 NJ 1050 4240
preplace netloc proc_sys_reset_1_peripheral_aresetn 1 5 2 1950 710 2320
preplace netloc sys_clock_1 1 0 1 NJ 1300
preplace netloc util_ds_buf_0_IBUF_OUT 1 1 11 310 160 NJ 160 NJ 160 NJ 160 1950J 150 NJ 150 NJ 150 NJ 150 NJ 150 NJ 150 3850
preplace netloc util_ds_buf_1_IBUF_OUT 1 1 2 320 740 840
preplace netloc util_vector_logic_0_Res 1 12 1 NJ 980
preplace netloc util_vector_logic_1_Res 1 11 1 3820J 830n
preplace netloc util_vector_logic_2_Res 1 12 1 NJ 480
preplace netloc util_vector_logic_3_Res 1 3 4 NJ 410 1540 490 1970 510 2300
preplace netloc util_vector_logic_4_Res 1 12 1 NJ 370
preplace netloc vio_0_probe_out0 1 4 2 1550J 670 1950
preplace netloc xdma_0_qpll_qpllreset 1 1 12 310 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 NJ 1140 4250
preplace netloc xdma_0_user_lnk_up 1 11 2 3880 300 4250
preplace netloc xlconstant_3_dout 1 12 1 NJ 1390
preplace netloc xpm_cdc_gen_0_dest_out 1 5 2 NJ 240 2280
preplace netloc xpm_cdc_gen_1_dest_out 1 5 2 NJ 80 2310
preplace netloc xpm_cdc_gen_2_dest_arst 1 7 3 N 650 2980 400 3240J
preplace netloc xpm_cdc_gen_3_dest_arst 1 7 3 2700J 710 3010 600 3220J
preplace netloc GT_SERIALM_RX_1 1 0 3 NJ 590 NJ 590 NJ
preplace netloc MGT_REFCLK_1 1 0 1 NJ 850
preplace netloc PCIe_REFCLK_1 1 0 1 NJ 730
preplace netloc aurora_8b10b_0_USER_DATA_M_AXI_RX 1 3 1 1230 540n
preplace netloc axis_data_fifo_01_M_AXIS 1 10 1 N 510
preplace netloc axis_data_fifo_0_M_AXIS 1 8 1 N 470
preplace netloc axis_data_fifo_11_M_AXIS 1 10 1 3500 630n
preplace netloc axis_data_fifo_1_M_AXIS 1 8 1 2990 310n
preplace netloc axis_distibutor_0_M00_AXIS 1 4 1 1530 390n
preplace netloc axis_distibutor_0_M01_AXIS 1 4 1 N 560
preplace netloc axis_dwidth_converter_0_M_AXIS 1 9 1 N 490
preplace netloc axis_dwidth_converter_1_M_AXIS 1 9 1 N 680
preplace netloc axis_sig_ext_1_M_AXIS 1 11 1 N 630
preplace netloc frame_alignment_0_M_AXIS 1 7 1 N 450
preplace netloc frame_alignment_1_M_AXIS 1 7 1 2690 250n
preplace netloc ins_tlast_0_M_AXIS 1 11 1 3830 510n
preplace netloc ins_tlast_0_M_AXIS1 1 5 1 1950 390n
preplace netloc ins_tlast_1_M_AXIS 1 5 1 N 580
preplace netloc reduce_fps_0_M_AXIS 1 6 1 N 420
preplace netloc reduce_fps_1_M_AXIS 1 6 1 2270 220n
preplace netloc xdma_0_pcie_mgt 1 12 1 NJ 620
levelinfo -pg 1 0 160 540 1020 1400 1760 2110 2520 2840 3120 3360 3660 4060 4270
pagesize -pg 1 -db -bbox -sgen -150 0 4450 1450
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/aurora2pcie/aurora2pcie.gen/sources_1/bd/design_1/hdl/design_1_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a50tcsg325-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a50tcsg325-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
