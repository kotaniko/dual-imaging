#*****************************************************************************************
# Vivado (TM) v2021.2 (64-bit)
#
# create_project_mipiCsi2aurora.tcl: Tcl script for re-creating project 'mipiCsi2aurora'
#
# Generated by Vivado on Sat Apr 02 21:54:38 -0400 2022
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_project_mipiCsi2aurora.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "./my_rtl/stream_mod.vhd"
#    "./my_rtl/aurora_8b10b_reset.vhd"
#    "./my_rtl/blink.vhd"
#    "./my_constrs/TE0714_TX.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/my_rtl/stream_mod.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/aurora_8b10b_reset.vhd"]"\
 "[file normalize "$origin_dir/my_rtl/blink.vhd"]"\
 "[file normalize "$origin_dir/my_constrs/TE0714_TX.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "mipiCsi2aurora"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_project_mipiCsi2aurora.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/mipiCsi2aurora"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a50tcsg325-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "2" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "2" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "2" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "2" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "2" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "2" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/my_rtl/stream_mod.vhd"] \
 [file normalize "${origin_dir}/my_rtl/aurora_8b10b_reset.vhd"] \
 [file normalize "${origin_dir}/my_rtl/blink.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/my_rtl/stream_mod.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/aurora_8b10b_reset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/my_rtl/blink.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/my_constrs/TE0714_TX.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/my_constrs/TE0714_TX.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/my_constrs/TE0714_TX.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/my_constrs/TE0714_TX.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files stream_mod.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/stream_mod.vhd
}
if { [get_files aurora_8b10b_reset.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/aurora_8b10b_reset.vhd
}
if { [get_files blink.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/blink.vhd
}
if { [get_files stream_mod.vhd] == "" } {
  import_files -quiet -fileset sources_1 ./my_rtl/stream_mod.vhd
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# aurora_8b10b_reset, blink, stream_mod, stream_mod



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:aurora_8b10b:11.1\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axi_iic:2.1\
  xilinx.com:ip:axi_timer:2.0\
  xilinx.com:ip:axi_uartlite:2.0\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:mipi_csi2_rx_subsystem:5.1\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:v_demosaic:1.1\
  xilinx.com:ip:v_gamma_lut:1.1\
  xilinx.com:ip:vio:3.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:lmb_v10:3.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  aurora_8b10b_reset\
  blink\
  stream_mod\
  stream_mod\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: microblaze_0_local_memory
proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB

  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB


  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst SYS_Rst

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $dlmb_bram_if_cntlr

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $ilmb_bram_if_cntlr

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create instance: lmb_bram, and set properties
  set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 lmb_bram ]
  set_property -dict [ list \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.use_bram_block {BRAM_Controller} \
 ] $lmb_bram

  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_1_dlmb [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_1_dlmb_bus [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_1_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net microblaze_1_ilmb [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_1_ilmb_bus [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_1_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]

  # Create port connections
  connect_bd_net -net SYS_Rst_1 [get_bd_pins SYS_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
  connect_bd_net -net microblaze_1_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set CAM1_I2C [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 CAM1_I2C ]

  set CAM2_I2C [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 CAM2_I2C ]

  set GT_REFCLK [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 GT_REFCLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
   ] $GT_REFCLK

  set GT_SERIAL_TX [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_aurora:GT_Serial_Transceiver_Pins_TX_rtl:1.0 GT_SERIAL_TX ]

  set MIPI_CSI_CAM1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:mipi_phy_rtl:1.0 MIPI_CSI_CAM1 ]

  set MIPI_CSI_CAM2 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:mipi_phy_rtl:1.0 MIPI_CSI_CAM2 ]

  set UART [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 UART ]


  # Create ports
  set BF4M_EN [ create_bd_port -dir O -from 0 -to 0 BF4M_EN ]
  set CAM1_PWUP [ create_bd_port -dir O -from 0 -to 0 -type rst CAM1_PWUP ]
  set CAM2_PWUP [ create_bd_port -dir O -from 0 -to 0 -type rst CAM2_PWUP ]
  set EN_GTPWR [ create_bd_port -dir O -from 0 -to 0 EN_GTPWR ]
  set KEY0 [ create_bd_port -dir I -type rst KEY0 ]
  set KEY1 [ create_bd_port -dir I -type rst KEY1 ]
  set LED_GREEN [ create_bd_port -dir O -from 0 -to 0 LED_GREEN ]
  set LED_MOD [ create_bd_port -dir O LED_MOD ]
  set LED_YELLOW [ create_bd_port -dir O -from 0 -to 0 LED_YELLOW ]
  set sys_clock [ create_bd_port -dir I -type clk -freq_hz 25000000 sys_clock ]
  set_property -dict [ list \
   CONFIG.PHASE {0.0} \
 ] $sys_clock

  # Create instance: aurora_8b10b_0, and set properties
  set aurora_8b10b_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:aurora_8b10b:11.1 aurora_8b10b_0 ]
  set_property -dict [ list \
   CONFIG.Backchannel_mode {Timer} \
   CONFIG.C_DRP_IF {true} \
   CONFIG.C_LANE_WIDTH {2} \
   CONFIG.C_LINE_RATE {3.125} \
   CONFIG.C_REFCLK_FREQUENCY {125.000} \
   CONFIG.Dataflow_Config {TX-only_Simplex} \
   CONFIG.Interface_Mode {Framing} \
   CONFIG.RX_PPM_OFFSET {0} \
   CONFIG.SINGLEEND_INITCLK {true} \
   CONFIG.SupportLevel {1} \
   CONFIG.TransceiverControl {false} \
 ] $aurora_8b10b_0

  # Create instance: aurora_8b10b_reset_0, and set properties
  set block_name aurora_8b10b_reset
  set block_cell_name aurora_8b10b_reset_0
  if { [catch {set aurora_8b10b_reset_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $aurora_8b10b_reset_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {0} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {32} \
 ] $axi_gpio_0

  # Create instance: axi_iic_0, and set properties
  set axi_iic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.1 axi_iic_0 ]

  # Create instance: axi_iic_1, and set properties
  set axi_iic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.1 axi_iic_1 ]

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {9} \
   CONFIG.S00_HAS_DATA_FIFO {0} \
   CONFIG.S00_HAS_REGSLICE {0} \
   CONFIG.STRATEGY {1} \
 ] $axi_interconnect_0

  # Create instance: axi_timer_0, and set properties
  set axi_timer_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_timer:2.0 axi_timer_0 ]
  set_property -dict [ list \
   CONFIG.enable_timer2 {0} \
 ] $axi_timer_0

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property -dict [ list \
   CONFIG.C_BAUDRATE {115200} \
 ] $axi_uartlite_0

  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_FIFO_DEPTH {64} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
   CONFIG.S00_FIFO_DEPTH {2048} \
   CONFIG.S01_FIFO_DEPTH {2048} \
 ] $axis_interconnect_0

  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {1} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.S_TUSER_WIDTH {1} \
   CONFIG.TDATA_REMAP {tdata[19:15],tdata[9:4],tdata[29:25]} \
   CONFIG.TDEST_REMAP {1'b0} \
   CONFIG.TID_REMAP {1'b0} \
   CONFIG.TKEEP_REMAP {tkeep[1:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TSTRB_REMAP {1'b0} \
   CONFIG.TUSER_REMAP {tuser[0:0]} \
 ] $axis_subset_converter_0

  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {1} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.S_TUSER_WIDTH {1} \
   CONFIG.TDATA_REMAP {tdata[19:15],tdata[9:4],tdata[29:25]} \
   CONFIG.TDEST_REMAP {1'b0} \
   CONFIG.TID_REMAP {1'b0} \
   CONFIG.TKEEP_REMAP {tkeep[1:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TSTRB_REMAP {1'b0} \
   CONFIG.TUSER_REMAP {tuser[0:0]} \
 ] $axis_subset_converter_1

  # Create instance: blink_0, and set properties
  set block_name blink
  set block_cell_name blink_0
  if { [catch {set blink_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $blink_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: clk_wiz, and set properties
  set clk_wiz [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {400.0} \
   CONFIG.CLKOUT1_JITTER {226.965} \
   CONFIG.CLKOUT1_PHASE_ERROR {237.727} \
   CONFIG.CLKOUT2_JITTER {206.578} \
   CONFIG.CLKOUT2_PHASE_ERROR {237.727} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {200} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {sys_clock} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {40.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {40.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {5} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.USE_BOARD_FLOW {true} \
   CONFIG.USE_LOCKED {true} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {10} \
   CONFIG.C_PROBE7_WIDTH {2} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_0

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {10} \
   CONFIG.C_PROBE7_WIDTH {2} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_1

  # Create instance: mdm_0, and set properties
  set mdm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_SIZE {32} \
   CONFIG.C_MB_DBG_PORTS {1} \
   CONFIG.C_M_AXI_ADDR_WIDTH {32} \
 ] $mdm_0

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_TAG_BITS {0} \
   CONFIG.C_AREA_OPTIMIZED {1} \
   CONFIG.C_CACHE_BYTE_SIZE {4096} \
   CONFIG.C_DCACHE_ADDR_TAG {0} \
   CONFIG.C_DCACHE_BYTE_SIZE {4096} \
   CONFIG.C_DCACHE_HIGHADDR {0x000000003fffffff} \
   CONFIG.C_DCACHE_USE_WRITEBACK {0} \
   CONFIG.C_DCACHE_VICTIMS {0} \
   CONFIG.C_DEBUG_ENABLED {1} \
   CONFIG.C_DIV_ZERO_EXCEPTION {0} \
   CONFIG.C_D_AXI {1} \
   CONFIG.C_D_LMB {1} \
   CONFIG.C_ICACHE_HIGHADDR {0x000000003fffffff} \
   CONFIG.C_ICACHE_LINE_LEN {4} \
   CONFIG.C_ICACHE_STREAMS {0} \
   CONFIG.C_ICACHE_VICTIMS {0} \
   CONFIG.C_ILL_OPCODE_EXCEPTION {0} \
   CONFIG.C_I_LMB {1} \
   CONFIG.C_MMU_DTLB_SIZE {2} \
   CONFIG.C_MMU_ITLB_SIZE {1} \
   CONFIG.C_MMU_ZONES {2} \
   CONFIG.C_M_AXI_D_BUS_EXCEPTION {0} \
   CONFIG.C_M_AXI_I_BUS_EXCEPTION {0} \
   CONFIG.C_NUMBER_OF_PC_BRK {0} \
   CONFIG.C_OPCODE_0x0_ILLEGAL {0} \
   CONFIG.C_PVR {0} \
   CONFIG.C_UNALIGNED_EXCEPTIONS {0} \
   CONFIG.C_USE_BARREL {0} \
   CONFIG.C_USE_DCACHE {0} \
   CONFIG.C_USE_DIV {0} \
   CONFIG.C_USE_HW_MUL {0} \
   CONFIG.C_USE_ICACHE {0} \
   CONFIG.C_USE_INTERRUPT {0} \
   CONFIG.C_USE_MMU {0} \
   CONFIG.C_USE_MSR_INSTR {0} \
   CONFIG.C_USE_PCMP_INSTR {0} \
   CONFIG.C_USE_REORDER_INSTR {0} \
   CONFIG.C_USE_STACK_PROTECTION {1} \
   CONFIG.G_TEMPLATE_LIST {1} \
   CONFIG.G_USE_EXCEPTIONS {0} \
 ] $microblaze_0

  # Create instance: microblaze_0_local_memory
  create_hier_cell_microblaze_0_local_memory [current_bd_instance .] microblaze_0_local_memory

  # Create instance: mipi_csi2_rx_subsyst_0, and set properties
  set mipi_csi2_rx_subsyst_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mipi_csi2_rx_subsystem:5.1 mipi_csi2_rx_subsyst_0 ]
  set_property -dict [ list \
   CONFIG.CMN_INC_VFB {true} \
   CONFIG.CMN_NUM_LANES {2} \
   CONFIG.CMN_NUM_PIXELS {1} \
   CONFIG.CMN_PXL_FORMAT {RAW10} \
   CONFIG.CMN_VC {0} \
   CONFIG.CSI_CONTROLLER_REG_IF {false} \
   CONFIG.CSI_EMB_NON_IMG {false} \
   CONFIG.C_CAL_MODE {FIXED} \
   CONFIG.C_CSI_EN_CRC {false} \
   CONFIG.C_DPHY_LANES {2} \
   CONFIG.C_EN_CLK300M {false} \
   CONFIG.C_EN_EXT_TAP {true} \
   CONFIG.C_HS_LINE_RATE {800} \
   CONFIG.C_HS_SETTLE_NS {147} \
   CONFIG.C_SHARE_IDLYCTRL {false} \
   CONFIG.DPY_EN_REG_IF {false} \
   CONFIG.DPY_LINE_RATE {800} \
   CONFIG.VFB_TU_WIDTH {1} \
 ] $mipi_csi2_rx_subsyst_0

  # Create instance: mipi_csi2_rx_subsyst_1, and set properties
  set mipi_csi2_rx_subsyst_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mipi_csi2_rx_subsystem:5.1 mipi_csi2_rx_subsyst_1 ]
  set_property -dict [ list \
   CONFIG.CMN_INC_VFB {true} \
   CONFIG.CMN_NUM_LANES {2} \
   CONFIG.CMN_NUM_PIXELS {1} \
   CONFIG.CMN_PXL_FORMAT {RAW10} \
   CONFIG.CMN_VC {0} \
   CONFIG.CSI_CONTROLLER_REG_IF {false} \
   CONFIG.CSI_EMB_NON_IMG {false} \
   CONFIG.C_CAL_MODE {FIXED} \
   CONFIG.C_CSI_EN_CRC {false} \
   CONFIG.C_DPHY_LANES {2} \
   CONFIG.C_EN_CLK300M {false} \
   CONFIG.C_EN_EXT_TAP {true} \
   CONFIG.C_HS_LINE_RATE {800} \
   CONFIG.C_HS_SETTLE_NS {147} \
   CONFIG.C_IDLY_TAP {1} \
   CONFIG.C_SHARE_IDLYCTRL {true} \
   CONFIG.DPY_EN_REG_IF {false} \
   CONFIG.DPY_LINE_RATE {800} \
   CONFIG.VFB_TU_WIDTH {1} \
 ] $mipi_csi2_rx_subsyst_1

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: stream_mod_0, and set properties
  set block_name stream_mod
  set block_cell_name stream_mod_0
  if { [catch {set stream_mod_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $stream_mod_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: stream_mod_1, and set properties
  set block_name stream_mod
  set block_cell_name stream_mod_1
  if { [catch {set stream_mod_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $stream_mod_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.BIT5 {"1"} \
 ] $stream_mod_1

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_MONITOR_SLOTS {2} \
   CONFIG.C_SLOT {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $system_ila_0

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {and} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_andgate.png} \
 ] $util_vector_logic_1

  # Create instance: util_vector_logic_2, and set properties
  set util_vector_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_2 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_2

  # Create instance: v_demosaic_0, and set properties
  set v_demosaic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_demosaic:1.1 v_demosaic_0 ]
  set_property -dict [ list \
   CONFIG.ALGORITHM {0} \
   CONFIG.MAX_COLS {1920} \
   CONFIG.MAX_DATA_WIDTH {10} \
   CONFIG.MAX_ROWS {1080} \
 ] $v_demosaic_0

  # Create instance: v_demosaic_1, and set properties
  set v_demosaic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_demosaic:1.1 v_demosaic_1 ]
  set_property -dict [ list \
   CONFIG.ALGORITHM {0} \
   CONFIG.MAX_COLS {1920} \
   CONFIG.MAX_DATA_WIDTH {10} \
   CONFIG.MAX_ROWS {1080} \
 ] $v_demosaic_1

  # Create instance: v_gamma_lut_0, and set properties
  set v_gamma_lut_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_gamma_lut:1.1 v_gamma_lut_0 ]
  set_property -dict [ list \
   CONFIG.MAX_COLS {1920} \
   CONFIG.MAX_DATA_WIDTH {10} \
   CONFIG.MAX_ROWS {1080} \
 ] $v_gamma_lut_0

  # Create instance: v_gamma_lut_1, and set properties
  set v_gamma_lut_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_gamma_lut:1.1 v_gamma_lut_1 ]
  set_property -dict [ list \
   CONFIG.MAX_COLS {1920} \
   CONFIG.MAX_DATA_WIDTH {10} \
   CONFIG.MAX_ROWS {1080} \
 ] $v_gamma_lut_1

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_EN_PROBE_IN_ACTIVITY {0} \
   CONFIG.C_NUM_PROBE_IN {0} \
   CONFIG.C_NUM_PROBE_OUT {4} \
   CONFIG.C_PROBE_OUT0_INIT_VAL {0x01} \
   CONFIG.C_PROBE_OUT0_WIDTH {5} \
   CONFIG.C_PROBE_OUT1_INIT_VAL {0x01} \
   CONFIG.C_PROBE_OUT1_WIDTH {5} \
   CONFIG.C_PROBE_OUT2_INIT_VAL {0x10} \
   CONFIG.C_PROBE_OUT2_WIDTH {5} \
   CONFIG.C_PROBE_OUT3_INIT_VAL {0x01} \
   CONFIG.C_PROBE_OUT3_WIDTH {5} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {1} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create interface connections
  connect_bd_intf_net -intf_net GT_DIFF_REFCLK1_1 [get_bd_intf_ports GT_REFCLK] [get_bd_intf_pins aurora_8b10b_0/GT_DIFF_REFCLK1]
  connect_bd_intf_net -intf_net MIPI_CSI_CAM1_1 [get_bd_intf_ports MIPI_CSI_CAM1] [get_bd_intf_pins mipi_csi2_rx_subsyst_0/mipi_phy_if]
  connect_bd_intf_net -intf_net MIPI_CSI_CAM2_1 [get_bd_intf_ports MIPI_CSI_CAM2] [get_bd_intf_pins mipi_csi2_rx_subsyst_1/mipi_phy_if]
  connect_bd_intf_net -intf_net aurora_8b10b_0_GT_SERIAL_TX [get_bd_intf_ports GT_SERIAL_TX] [get_bd_intf_pins aurora_8b10b_0/GT_SERIAL_TX]
  connect_bd_intf_net -intf_net axi_iic_0_IIC [get_bd_intf_ports CAM1_I2C] [get_bd_intf_pins axi_iic_0/IIC]
  connect_bd_intf_net -intf_net axi_iic_1_IIC [get_bd_intf_ports CAM2_I2C] [get_bd_intf_pins axi_iic_1/IIC]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_iic_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_iic_1/S_AXI] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins v_demosaic_0/s_axi_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins v_demosaic_1/s_axi_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins v_gamma_lut_0/s_axi_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_interconnect_0/M05_AXI] [get_bd_intf_pins v_gamma_lut_1/s_axi_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins axi_interconnect_0/M06_AXI] [get_bd_intf_pins axi_uartlite_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M07_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M08_AXI [get_bd_intf_pins axi_interconnect_0/M08_AXI] [get_bd_intf_pins axi_timer_0/S_AXI]
  connect_bd_intf_net -intf_net axi_uartlite_0_UART [get_bd_intf_ports UART] [get_bd_intf_pins axi_uartlite_0/UART]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_interconnect_0/S00_AXIS] [get_bd_intf_pins stream_mod_0/M_AXIS]
connect_bd_intf_net -intf_net [get_bd_intf_nets axis_broadcaster_0_M00_AXIS] [get_bd_intf_pins stream_mod_0/M_AXIS] [get_bd_intf_pins system_ila_0/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_interconnect_0/S01_AXIS] [get_bd_intf_pins stream_mod_1/M_AXIS]
connect_bd_intf_net -intf_net [get_bd_intf_nets axis_broadcaster_0_M01_AXIS] [get_bd_intf_pins stream_mod_1/M_AXIS] [get_bd_intf_pins system_ila_0/SLOT_1_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins aurora_8b10b_0/USER_DATA_S_AXI_TX] [get_bd_intf_pins axis_interconnect_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins axis_subset_converter_0/M_AXIS] [get_bd_intf_pins stream_mod_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins axis_subset_converter_1/M_AXIS] [get_bd_intf_pins stream_mod_1/S_AXIS]
  connect_bd_intf_net -intf_net mdm_0_MBDEBUG_0 [get_bd_intf_pins mdm_0/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_1_M_AXI_DP [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins microblaze_0/M_AXI_DP]
  connect_bd_intf_net -intf_net microblaze_1_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
  connect_bd_intf_net -intf_net microblaze_1_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]
  connect_bd_intf_net -intf_net mipi_csi2_rx_subsyst_0_video_out [get_bd_intf_pins mipi_csi2_rx_subsyst_0/video_out] [get_bd_intf_pins v_demosaic_0/s_axis_video]
  connect_bd_intf_net -intf_net mipi_csi2_rx_subsyst_1_video_out [get_bd_intf_pins mipi_csi2_rx_subsyst_1/video_out] [get_bd_intf_pins v_demosaic_1/s_axis_video]
  connect_bd_intf_net -intf_net v_demosaic_0_m_axis_video [get_bd_intf_pins v_demosaic_0/m_axis_video] [get_bd_intf_pins v_gamma_lut_0/s_axis_video]
  connect_bd_intf_net -intf_net v_demosaic_1_m_axis_video [get_bd_intf_pins v_demosaic_1/m_axis_video] [get_bd_intf_pins v_gamma_lut_1/s_axis_video]
  connect_bd_intf_net -intf_net v_gamma_lut_0_m_axis_video [get_bd_intf_pins axis_subset_converter_0/S_AXIS] [get_bd_intf_pins v_gamma_lut_0/m_axis_video]
  connect_bd_intf_net -intf_net v_gamma_lut_1_m_axis_video [get_bd_intf_pins axis_subset_converter_1/S_AXIS] [get_bd_intf_pins v_gamma_lut_1/m_axis_video]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins aurora_8b10b_0/user_clk_out] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK]
  connect_bd_net -net ARESETN_1 [get_bd_ports BF4M_EN] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins axis_subset_converter_1/aresetn] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net KEY0_1 [get_bd_ports KEY0] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net KEY1_1 [get_bd_ports KEY1] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net M00_AXIS_ARESETN_1 [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net aurora_8b10b_0_sys_reset_out [get_bd_pins aurora_8b10b_0/sys_reset_out] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net aurora_8b10b_0_tx_channel_up [get_bd_pins aurora_8b10b_0/tx_channel_up] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net aurora_8b10b_0_tx_lane_up [get_bd_pins aurora_8b10b_0/tx_lane_up] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net aurora_8b10b_reset_0_gt_reset [get_bd_pins aurora_8b10b_0/gt_reset] [get_bd_pins aurora_8b10b_reset_0/gt_reset]
  connect_bd_net -net aurora_8b10b_reset_0_system_reset [get_bd_pins aurora_8b10b_0/tx_system_reset] [get_bd_pins aurora_8b10b_reset_0/system_reset]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins axi_gpio_0/gpio_io_o] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din]
  connect_bd_net -net blink_0_LED [get_bd_ports LED_MOD] [get_bd_pins blink_0/LED]
  connect_bd_net -net clk_wiz_clk_out2 [get_bd_pins clk_wiz/clk_out2] [get_bd_pins mipi_csi2_rx_subsyst_0/dphy_clk_200M] [get_bd_pins mipi_csi2_rx_subsyst_1/dphy_clk_200M]
  connect_bd_net -net clk_wiz_locked [get_bd_pins clk_wiz/locked] [get_bd_pins proc_sys_reset_0/dcm_locked] [get_bd_pins proc_sys_reset_1/dcm_locked]
  connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins mdm_0/Debug_SYS_Rst] [get_bd_pins proc_sys_reset_0/mb_debug_sys_rst] [get_bd_pins proc_sys_reset_1/mb_debug_sys_rst]
  connect_bd_net -net microblaze_1_Clk [get_bd_pins aurora_8b10b_0/drpclk_in] [get_bd_pins aurora_8b10b_0/init_clk_in] [get_bd_pins aurora_8b10b_reset_0/clock] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_iic_0/s_axi_aclk] [get_bd_pins axi_iic_1/s_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_timer_0/s_axi_aclk] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins blink_0/CLK] [get_bd_pins clk_wiz/clk_out1] [get_bd_pins ila_0/clk] [get_bd_pins ila_1/clk] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_local_memory/LMB_Clk] [get_bd_pins mipi_csi2_rx_subsyst_0/video_aclk] [get_bd_pins mipi_csi2_rx_subsyst_1/video_aclk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins stream_mod_0/axis_aclk] [get_bd_pins stream_mod_1/axis_aclk] [get_bd_pins system_ila_0/clk] [get_bd_pins v_demosaic_0/ap_clk] [get_bd_pins v_demosaic_1/ap_clk] [get_bd_pins v_gamma_lut_0/ap_clk] [get_bd_pins v_gamma_lut_1/ap_clk] [get_bd_pins vio_0/clk]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_cl_stopstate_intr [get_bd_pins ila_0/probe3] [get_bd_pins mipi_csi2_rx_subsyst_0/cl_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_crc_status_intr [get_bd_pins ila_0/probe6] [get_bd_pins mipi_csi2_rx_subsyst_0/crc_status_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_ctrl_dis_in_prgs [get_bd_pins ila_0/probe0] [get_bd_pins mipi_csi2_rx_subsyst_0/ctrl_dis_in_prgs]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_dl0_stopstate_intr [get_bd_pins ila_0/probe4] [get_bd_pins mipi_csi2_rx_subsyst_0/dl0_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_dl1_stopstate_intr [get_bd_pins ila_0/probe5] [get_bd_pins mipi_csi2_rx_subsyst_0/dl1_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_ecc_status_intr [get_bd_pins ila_0/probe7] [get_bd_pins mipi_csi2_rx_subsyst_0/ecc_status_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_errsoths_intr [get_bd_pins ila_0/probe2] [get_bd_pins mipi_csi2_rx_subsyst_0/errsoths_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_errsotsynchs_intr [get_bd_pins ila_0/probe1] [get_bd_pins mipi_csi2_rx_subsyst_0/errsotsynchs_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_frame_rcvd_pulse_out [get_bd_pins ila_0/probe9] [get_bd_pins mipi_csi2_rx_subsyst_0/frame_rcvd_pulse_out]
  connect_bd_net -net mipi_csi2_rx_subsyst_0_linebuffer_full [get_bd_pins ila_0/probe8] [get_bd_pins mipi_csi2_rx_subsyst_0/linebuffer_full]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_cl_stopstate_intr [get_bd_pins ila_1/probe3] [get_bd_pins mipi_csi2_rx_subsyst_1/cl_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_crc_status_intr [get_bd_pins ila_1/probe6] [get_bd_pins mipi_csi2_rx_subsyst_1/crc_status_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_ctrl_dis_in_prgs [get_bd_pins ila_1/probe0] [get_bd_pins mipi_csi2_rx_subsyst_1/ctrl_dis_in_prgs]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_dl0_stopstate_intr [get_bd_pins ila_1/probe4] [get_bd_pins mipi_csi2_rx_subsyst_1/dl0_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_dl1_stopstate_intr [get_bd_pins ila_1/probe5] [get_bd_pins mipi_csi2_rx_subsyst_1/dl1_stopstate_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_dlyctrl_rdy_out [get_bd_pins mipi_csi2_rx_subsyst_0/dlyctrl_rdy_in] [get_bd_pins mipi_csi2_rx_subsyst_1/dlyctrl_rdy_out]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_ecc_status_intr [get_bd_pins ila_1/probe7] [get_bd_pins mipi_csi2_rx_subsyst_1/ecc_status_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_errsoths_intr [get_bd_pins ila_1/probe2] [get_bd_pins mipi_csi2_rx_subsyst_1/errsoths_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_errsotsynchs_intr [get_bd_pins ila_1/probe1] [get_bd_pins mipi_csi2_rx_subsyst_1/errsotsynchs_intr]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_frame_rcvd_pulse_out [get_bd_pins ila_1/probe9] [get_bd_pins mipi_csi2_rx_subsyst_1/frame_rcvd_pulse_out]
  connect_bd_net -net mipi_csi2_rx_subsyst_1_linebuffer_full [get_bd_pins ila_1/probe8] [get_bd_pins mipi_csi2_rx_subsyst_1/linebuffer_full]
  connect_bd_net -net proc_sys_reset_0_bus_struct_reset [get_bd_pins microblaze_0_local_memory/SYS_Rst] [get_bd_pins proc_sys_reset_0/bus_struct_reset]
  connect_bd_net -net proc_sys_reset_0_mb_reset [get_bd_pins microblaze_0/Reset] [get_bd_pins proc_sys_reset_0/mb_reset]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_iic_0/s_axi_aresetn] [get_bd_pins axi_iic_1/s_axi_aresetn] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_timer_0/s_axi_aresetn] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins mipi_csi2_rx_subsyst_0/ctrl_core_en] [get_bd_pins mipi_csi2_rx_subsyst_0/video_aresetn] [get_bd_pins mipi_csi2_rx_subsyst_1/ctrl_core_en] [get_bd_pins mipi_csi2_rx_subsyst_1/video_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins stream_mod_0/axis_aresetn] [get_bd_pins stream_mod_1/axis_aresetn] [get_bd_pins system_ila_0/resetn] [get_bd_pins v_demosaic_0/ap_rst_n] [get_bd_pins v_demosaic_1/ap_rst_n] [get_bd_pins v_gamma_lut_0/ap_rst_n] [get_bd_pins v_gamma_lut_1/ap_rst_n]
  connect_bd_net -net proc_sys_reset_0_peripheral_reset [get_bd_pins aurora_8b10b_reset_0/peri_reset] [get_bd_pins blink_0/RST] [get_bd_pins proc_sys_reset_1/peripheral_reset]
  connect_bd_net -net sys_clock_1 [get_bd_ports sys_clock] [get_bd_pins clk_wiz/clk_in1]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins util_vector_logic_1/Res] [get_bd_pins util_vector_logic_2/Op1]
  connect_bd_net -net util_vector_logic_2_Res [get_bd_ports LED_YELLOW] [get_bd_pins util_vector_logic_2/Res]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins mipi_csi2_rx_subsyst_0/lane0_tap] [get_bd_pins vio_0/probe_out0]
  connect_bd_net -net vio_0_probe_out1 [get_bd_pins mipi_csi2_rx_subsyst_0/lane1_tap] [get_bd_pins vio_0/probe_out1]
  connect_bd_net -net vio_0_probe_out2 [get_bd_pins mipi_csi2_rx_subsyst_1/lane0_tap] [get_bd_pins vio_0/probe_out2]
  connect_bd_net -net vio_0_probe_out3 [get_bd_pins mipi_csi2_rx_subsyst_1/lane1_tap] [get_bd_pins vio_0/probe_out3]
  connect_bd_net -net xlconstant_0_dout [get_bd_ports EN_GTPWR] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_ports CAM1_PWUP] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_ports CAM2_PWUP] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_ports LED_GREEN] [get_bd_pins xlslice_2/Dout]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40800000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_iic_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40810000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_iic_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x41C00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_timer_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40600000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x44A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs v_demosaic_0/s_axi_CTRL/Reg] -force
  assign_bd_address -offset 0x44A10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs v_demosaic_1/s_axi_CTRL/Reg] -force
  assign_bd_address -offset 0x44A20000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs v_gamma_lut_0/s_axi_CTRL/Reg] -force
  assign_bd_address -offset 0x44A30000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs v_gamma_lut_1/s_axi_CTRL/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.925248",
   "Default View_TopLeft":"2865,317",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port CAM1_I2C -pg 1 -lvl 13 -x 4210 -y 870 -defaultsOSRD
preplace port CAM2_I2C -pg 1 -lvl 13 -x 4210 -y 1010 -defaultsOSRD
preplace port GT_REFCLK -pg 1 -lvl 0 -x -10 -y 170 -defaultsOSRD
preplace port GT_SERIAL_TX -pg 1 -lvl 13 -x 4210 -y 140 -defaultsOSRD
preplace port MIPI_CSI_CAM1 -pg 1 -lvl 0 -x -10 -y 660 -defaultsOSRD
preplace port MIPI_CSI_CAM2 -pg 1 -lvl 0 -x -10 -y 300 -defaultsOSRD
preplace port UART -pg 1 -lvl 13 -x 4210 -y 1290 -defaultsOSRD
preplace port port-id_KEY0 -pg 1 -lvl 0 -x -10 -y 1530 -defaultsOSRD
preplace port port-id_KEY1 -pg 1 -lvl 0 -x -10 -y 1670 -defaultsOSRD
preplace port port-id_LED_MOD -pg 1 -lvl 13 -x 4210 -y 1450 -defaultsOSRD
preplace port port-id_sys_clock -pg 1 -lvl 0 -x -10 -y 1440 -defaultsOSRD
preplace portBus BF4M_EN -pg 1 -lvl 13 -x 4210 -y 1380 -defaultsOSRD
preplace portBus CAM1_PWUP -pg 1 -lvl 13 -x 4210 -y 1660 -defaultsOSRD
preplace portBus CAM2_PWUP -pg 1 -lvl 13 -x 4210 -y 1760 -defaultsOSRD
preplace portBus EN_GTPWR -pg 1 -lvl 13 -x 4210 -y 1560 -defaultsOSRD
preplace portBus LED_GREEN -pg 1 -lvl 13 -x 4210 -y 1960 -defaultsOSRD
preplace portBus LED_YELLOW -pg 1 -lvl 13 -x 4210 -y 770 -defaultsOSRD
preplace inst aurora_8b10b_0 -pg 1 -lvl 12 -x 3980 -y 220 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 7 -x 2220 -y 1580 -defaultsOSRD
preplace inst axi_iic_0 -pg 1 -lvl 12 -x 3980 -y 890 -defaultsOSRD
preplace inst axi_iic_1 -pg 1 -lvl 12 -x 3980 -y 1030 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 6 -x 1710 -y 1190 -defaultsOSRD
preplace inst axi_timer_0 -pg 1 -lvl 7 -x 2220 -y 1390 -defaultsOSRD
preplace inst axi_uartlite_0 -pg 1 -lvl 12 -x 3980 -y 1300 -defaultsOSRD
preplace inst axis_interconnect_0 -pg 1 -lvl 11 -x 3600 -y 340 -defaultsOSRD
preplace inst axis_subset_converter_0 -pg 1 -lvl 9 -x 2950 -y 1020 -defaultsOSRD
preplace inst axis_subset_converter_1 -pg 1 -lvl 9 -x 2950 -y 1180 -defaultsOSRD
preplace inst clk_wiz -pg 1 -lvl 1 -x 110 -y 1440 -defaultsOSRD
preplace inst ila_0 -pg 1 -lvl 7 -x 2220 -y 710 -defaultsOSRD
preplace inst ila_1 -pg 1 -lvl 7 -x 2220 -y 390 -defaultsOSRD
preplace inst mdm_0 -pg 1 -lvl 4 -x 930 -y 1540 -defaultsOSRD
preplace inst microblaze_0 -pg 1 -lvl 5 -x 1270 -y 1540 -defaultsOSRD
preplace inst microblaze_0_local_memory -pg 1 -lvl 6 -x 1710 -y 1570 -defaultsOSRD
preplace inst mipi_csi2_rx_subsyst_0 -pg 1 -lvl 6 -x 1710 -y 730 -defaultsOSRD
preplace inst mipi_csi2_rx_subsyst_1 -pg 1 -lvl 6 -x 1710 -y 360 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 2 -x 390 -y 1550 -defaultsOSRD
preplace inst proc_sys_reset_1 -pg 1 -lvl 8 -x 2600 -y 1490 -defaultsOSRD
preplace inst stream_mod_1 -pg 1 -lvl 10 -x 3260 -y 790 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 11 -x 3600 -y 600 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 8 -x 2600 -y 290 -defaultsOSRD
preplace inst util_vector_logic_1 -pg 1 -lvl 11 -x 3600 -y 800 -defaultsOSRD
preplace inst util_vector_logic_2 -pg 1 -lvl 12 -x 3980 -y 770 -defaultsOSRD
preplace inst v_demosaic_0 -pg 1 -lvl 7 -x 2220 -y 970 -defaultsOSRD
preplace inst v_demosaic_1 -pg 1 -lvl 7 -x 2220 -y 1150 -defaultsOSRD
preplace inst v_gamma_lut_0 -pg 1 -lvl 8 -x 2600 -y 1010 -defaultsOSRD
preplace inst v_gamma_lut_1 -pg 1 -lvl 8 -x 2600 -y 1170 -defaultsOSRD
preplace inst vio_0 -pg 1 -lvl 3 -x 710 -y 810 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 12 -x 3980 -y 1560 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 12 -x 3980 -y 1660 -defaultsOSRD
preplace inst xlslice_1 -pg 1 -lvl 12 -x 3980 -y 1760 -defaultsOSRD
preplace inst xlslice_2 -pg 1 -lvl 12 -x 3980 -y 1960 -defaultsOSRD
preplace inst xlslice_3 -pg 1 -lvl 12 -x 3980 -y 1860 -defaultsOSRD
preplace inst aurora_8b10b_reset_0 -pg 1 -lvl 9 -x 2950 -y 530 -defaultsOSRD
preplace inst blink_0 -pg 1 -lvl 12 -x 3980 -y 1450 -defaultsOSRD
preplace inst stream_mod_0 -pg 1 -lvl 10 -x 3260 -y 630 -defaultsOSRD
preplace netloc ACLK_1 1 10 3 3450 10 NJ 10 4190
preplace netloc ARESETN_1 1 2 11 580 1450 NJ 1450 NJ 1450 1560 910 1970J 1270 NJ 1270 2800 1380 NJ 1380 NJ 1380 NJ 1380 NJ
preplace netloc KEY0_1 1 0 2 NJ 1530 NJ
preplace netloc KEY1_1 1 0 8 NJ 1670 NJ 1670 NJ 1670 NJ 1670 NJ 1670 NJ 1670 NJ 1670 2410J
preplace netloc M00_AXIS_ARESETN_1 1 8 3 NJ 290 NJ 290 3420
preplace netloc aurora_8b10b_0_sys_reset_out 1 7 6 2390 20 NJ 20 NJ 20 NJ 20 NJ 20 4180
preplace netloc aurora_8b10b_0_tx_channel_up 1 10 3 3440 710 3770J 700 4170
preplace netloc aurora_8b10b_0_tx_lane_up 1 10 3 3450 720 3780J 710 4160
preplace netloc aurora_8b10b_reset_0_gt_reset 1 9 3 NJ 520 3420J 510 3770
preplace netloc aurora_8b10b_reset_0_system_reset 1 9 3 NJ 540 3400J 700 3760
preplace netloc axi_gpio_0_gpio_io_o 1 7 5 NJ 1590 NJ 1590 NJ 1590 NJ 1590 3780
preplace netloc blink_0_LED 1 12 1 NJ 1450
preplace netloc clk_wiz_clk_out2 1 1 5 210 1430 NJ 1430 NJ 1430 NJ 1430 1500
preplace netloc clk_wiz_locked 1 1 7 210 1660 NJ 1660 NJ 1660 NJ 1660 NJ 1660 NJ 1660 2430J
preplace netloc mdm_1_debug_sys_rst 1 1 7 220 1650 600J 1610 NJ 1610 1030 1650 NJ 1650 2050J 1500 2390J
preplace netloc microblaze_1_Clk 1 1 11 220 1420 590 1440 NJ 1440 1040 1440 1550 1470 1950 1250 2430 1260 2770 740 3120 550 3440 690 3790
preplace netloc mipi_csi2_rx_subsyst_0_cl_stopstate_intr 1 6 1 1900 690n
preplace netloc mipi_csi2_rx_subsyst_0_crc_status_intr 1 6 1 1930 750n
preplace netloc mipi_csi2_rx_subsyst_0_ctrl_dis_in_prgs 1 6 1 1860 630n
preplace netloc mipi_csi2_rx_subsyst_0_dl0_stopstate_intr 1 6 1 1910 710n
preplace netloc mipi_csi2_rx_subsyst_0_dl1_stopstate_intr 1 6 1 1920 730n
preplace netloc mipi_csi2_rx_subsyst_0_ecc_status_intr 1 6 1 1940 770n
preplace netloc mipi_csi2_rx_subsyst_0_errsoths_intr 1 6 1 1890 670n
preplace netloc mipi_csi2_rx_subsyst_0_errsotsynchs_intr 1 6 1 1880 650n
preplace netloc mipi_csi2_rx_subsyst_0_frame_rcvd_pulse_out 1 6 1 1980 810n
preplace netloc mipi_csi2_rx_subsyst_0_linebuffer_full 1 6 1 1970 790n
preplace netloc mipi_csi2_rx_subsyst_1_cl_stopstate_intr 1 6 1 N 370
preplace netloc mipi_csi2_rx_subsyst_1_crc_status_intr 1 6 1 N 430
preplace netloc mipi_csi2_rx_subsyst_1_ctrl_dis_in_prgs 1 6 1 N 310
preplace netloc mipi_csi2_rx_subsyst_1_dl0_stopstate_intr 1 6 1 N 390
preplace netloc mipi_csi2_rx_subsyst_1_dl1_stopstate_intr 1 6 1 N 410
preplace netloc mipi_csi2_rx_subsyst_1_dlyctrl_rdy_out 1 5 2 1560 550 1860
preplace netloc mipi_csi2_rx_subsyst_1_ecc_status_intr 1 6 1 N 450
preplace netloc mipi_csi2_rx_subsyst_1_errsoths_intr 1 6 1 N 350
preplace netloc mipi_csi2_rx_subsyst_1_errsotsynchs_intr 1 6 1 N 330
preplace netloc mipi_csi2_rx_subsyst_1_frame_rcvd_pulse_out 1 6 1 N 490
preplace netloc mipi_csi2_rx_subsyst_1_linebuffer_full 1 6 1 N 470
preplace netloc proc_sys_reset_0_bus_struct_reset 1 2 4 570 1640 NJ 1640 NJ 1640 1560J
preplace netloc proc_sys_reset_0_mb_reset 1 2 3 590 1620 NJ 1620 1040J
preplace netloc proc_sys_reset_0_peripheral_aresetn 1 2 10 560J 1630 NJ 1630 NJ 1630 1530 1480 2040 1260 2400 920 NJ 920 3110 710 3430 730 3770
preplace netloc proc_sys_reset_0_peripheral_reset 1 8 4 2790 1460 NJ 1460 NJ 1460 NJ
preplace netloc sys_clock_1 1 0 1 NJ 1440
preplace netloc util_vector_logic_1_Res 1 11 1 3800J 770n
preplace netloc util_vector_logic_2_Res 1 12 1 NJ 770
preplace netloc vio_0_probe_out0 1 3 3 NJ 780 NJ 780 N
preplace netloc vio_0_probe_out1 1 3 3 NJ 800 NJ 800 N
preplace netloc vio_0_probe_out2 1 3 3 NJ 820 NJ 820 1510
preplace netloc vio_0_probe_out3 1 3 3 NJ 840 NJ 840 1520
preplace netloc xlconstant_0_dout 1 12 1 NJ 1560
preplace netloc xlconstant_1_dout 1 12 1 NJ 1660
preplace netloc xlslice_1_Dout 1 12 1 NJ 1760
preplace netloc xlslice_2_Dout 1 12 1 NJ 1960
preplace netloc GT_DIFF_REFCLK1_1 1 0 12 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ 170 NJ
preplace netloc MIPI_CSI_CAM1_1 1 0 6 NJ 660 NJ 660 NJ 660 NJ 660 NJ 660 NJ
preplace netloc MIPI_CSI_CAM2_1 1 0 6 NJ 300 NJ 300 NJ 300 NJ 300 NJ 300 NJ
preplace netloc aurora_8b10b_0_GT_SERIAL_TX 1 12 1 NJ 140
preplace netloc axi_iic_0_IIC 1 12 1 NJ 870
preplace netloc axi_iic_1_IIC 1 12 1 NJ 1010
preplace netloc axi_interconnect_0_M00_AXI 1 6 6 1980 870 NJ 870 NJ 870 NJ 870 NJ 870 NJ
preplace netloc axi_interconnect_0_M01_AXI 1 6 6 2000 880 NJ 880 2780J 910 NJ 910 NJ 910 3750J
preplace netloc axi_interconnect_0_M02_AXI 1 6 1 2010 940n
preplace netloc axi_interconnect_0_M03_AXI 1 6 1 2030 1120n
preplace netloc axi_interconnect_0_M04_AXI 1 6 2 2020 1060 2390J
preplace netloc axi_interconnect_0_M05_AXI 1 6 2 1960 1240 2420J
preplace netloc axi_interconnect_0_M06_AXI 1 6 6 1900 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ
preplace netloc axi_interconnect_0_M07_AXI 1 6 1 1880 1250n
preplace netloc axi_interconnect_0_M08_AXI 1 6 1 1860 1270n
preplace netloc axi_uartlite_0_UART 1 12 1 NJ 1290
preplace netloc axis_broadcaster_0_M00_AXIS 1 10 1 3390 230n
preplace netloc axis_broadcaster_0_M01_AXIS 1 10 1 3410 250n
preplace netloc axis_interconnect_0_M00_AXIS 1 11 1 3750 150n
preplace netloc axis_subset_converter_0_M_AXIS 1 9 1 3100 610n
preplace netloc axis_subset_converter_1_M_AXIS 1 9 1 3130 770n
preplace netloc mdm_0_MBDEBUG_0 1 4 1 N 1530
preplace netloc microblaze_1_M_AXI_DP 1 5 1 1510 970n
preplace netloc microblaze_1_dlmb_1 1 5 1 1540 1520n
preplace netloc microblaze_1_ilmb_1 1 5 1 1520 1540n
preplace netloc mipi_csi2_rx_subsyst_0_video_out 1 6 1 1870 610n
preplace netloc mipi_csi2_rx_subsyst_1_video_out 1 6 1 1990 230n
preplace netloc v_demosaic_0_m_axis_video 1 7 1 2430 960n
preplace netloc v_demosaic_1_m_axis_video 1 7 1 2410 1140n
preplace netloc v_gamma_lut_0_m_axis_video 1 8 1 N 1000
preplace netloc v_gamma_lut_1_m_axis_video 1 8 1 N 1160
levelinfo -pg 1 -10 110 390 710 930 1270 1710 2220 2600 2950 3260 3600 3980 4210
pagesize -pg 1 -db -bbox -sgen -160 0 4370 2020
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/mipiCsi2aurora/mipiCsi2aurora.gen/sources_1/bd/design_1/hdl/design_1_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a50tcsg325-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a50tcsg325-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
